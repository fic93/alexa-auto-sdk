/*
 * Copyright 2017-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*********************************************************
**********************************************************
**********************************************************

THIS FILE IS AUTOGENERATED. DO NOT EDIT

**********************************************************
**********************************************************
*********************************************************/

#ifndef ADDRESSBOOK_POSTALADDRESS_H
#define ADDRESSBOOK_POSTALADDRESS_H

#include <string>
#include <vector>

#include <AACE/Engine/Utils/UUID/UUID.h>
#include <nlohmann/json.hpp>

namespace aasb {
namespace message {
namespace addressBook {
namespace addressBook {

//Class Definition
struct PostalAddress {
    std::string toString() const;
    std::string entryId;
    std::string label;
    std::string addressLine1;
    std::string addressLine2;
    std::string addressLine3;
    std::string city;
    std::string stateOrRegion;
    std::string districtOrCounty;
    std::string postalCode;
    std::string country;
    float latitudeInDegrees;
    float longitudeInDegrees;
    float accuracyInMeters;
};

//JSON Serialization
inline void to_json(nlohmann::json& j, const PostalAddress& c) {
    j = nlohmann::json{
        {"entryId", c.entryId},
        {"label", c.label},
        {"addressLine1", c.addressLine1},
        {"addressLine2", c.addressLine2},
        {"addressLine3", c.addressLine3},
        {"city", c.city},
        {"stateOrRegion", c.stateOrRegion},
        {"districtOrCounty", c.districtOrCounty},
        {"postalCode", c.postalCode},
        {"country", c.country},
        {"latitudeInDegrees", c.latitudeInDegrees},
        {"longitudeInDegrees", c.longitudeInDegrees},
        {"accuracyInMeters", c.accuracyInMeters},
    };
}
inline void from_json(const nlohmann::json& j, PostalAddress& c) {
    j.at("entryId").get_to(c.entryId);
    j.at("label").get_to(c.label);
    j.at("addressLine1").get_to(c.addressLine1);
    j.at("addressLine2").get_to(c.addressLine2);
    j.at("addressLine3").get_to(c.addressLine3);
    j.at("city").get_to(c.city);
    j.at("stateOrRegion").get_to(c.stateOrRegion);
    j.at("districtOrCounty").get_to(c.districtOrCounty);
    j.at("postalCode").get_to(c.postalCode);
    j.at("country").get_to(c.country);
    j.at("latitudeInDegrees").get_to(c.latitudeInDegrees);
    j.at("longitudeInDegrees").get_to(c.longitudeInDegrees);
    j.at("accuracyInMeters").get_to(c.accuracyInMeters);
}

inline std::string PostalAddress::toString() const {
    nlohmann::json j = *this;
    return j.dump(3);
}

}  // namespace addressBook
}  // namespace addressBook
}  // namespace message
}  // namespace aasb

#endif  // ADDRESSBOOK_POSTALADDRESS_H
