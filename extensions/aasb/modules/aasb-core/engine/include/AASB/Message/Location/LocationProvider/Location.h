/*
 * Copyright 2017-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*********************************************************
**********************************************************
**********************************************************

THIS FILE IS AUTOGENERATED. DO NOT EDIT

**********************************************************
**********************************************************
*********************************************************/

#ifndef LOCATIONPROVIDER_LOCATION_H
#define LOCATIONPROVIDER_LOCATION_H

#include <string>
#include <vector>

#include <AACE/Engine/Utils/UUID/UUID.h>
#include <nlohmann/json.hpp>

namespace aasb {
namespace message {
namespace location {

//Class Definition
struct Location {
    std::string toString() const;
    float latitude;
    float longitude;
};

//JSON Serialization
inline void to_json(nlohmann::json& j, const Location& c) {
    j = nlohmann::json{
        {"latitude", c.latitude},
        {"longitude", c.longitude},
    };
}
inline void from_json(const nlohmann::json& j, Location& c) {
    j.at("latitude").get_to(c.latitude);
    j.at("longitude").get_to(c.longitude);
}

inline std::string Location::toString() const {
    nlohmann::json j = *this;
    return j.dump(3);
}

}  // namespace location
}  // namespace message
}  // namespace aasb

#endif  // LOCATIONPROVIDER_LOCATION_H
